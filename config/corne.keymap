/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp TAB   &kp SEMICOLON &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G &kp C &kp R &kp L &kp BSPC
        &kp LCTRL &kp A         &kp O     &kp E   &kp U &kp I   &kp D &kp H &kp T &kp N &kp S &kp RALT
        &kp LSHFT &kp SQT       &kp Q     &kp J   &kp K &kp X   &kp B &kp M &kp W &kp V &kp Z &mt RSHFT SLASH
        &mo 1 &kp LCMD &mt LALT SPACE   &kp SPACE &mt RCMD ENTER &mo 2
      >;
    };

    lower_layer {
      bindings = <
        &kp ESC &kp COLON &kp LT    &kp GT    &kp LPAR &kp RPAR   &kp TILDE &kp N7 &kp N8 &kp N9 &kp N0        &kp DEL 
        &trans  &kp GRAVE &kp MINUS &kp EQUAL &kp LBRC &kp RBRC   &trans    &kp N4 &kp N5 &kp N6 &kp BACKSLASH &trans
        &trans  &kp DQT   &kp UNDER &kp PLUS  &kp LBKT &kp RBKT   &trans    &kp N1 &kp N2 &kp N3 &kp PIPE      &kp QMARK
        &trans &kp LCMD &mt LALT SPACE   &kp SPACE &mt RCMD ENTER &mo 2
      >;
    };

    raise_layer {
      bindings = <
        &kp F1 &kp F2    &kp F3    &kp F4   &kp F5    &kp F6     &kp F7    &kp F8   &kp F9   &kp F10   &kp F11 &kp F12
        &trans &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp HOME   &kp PG_UP &kp LEFT &kp UP   &kp RIGHT &trans  &kp K_APP
        &trans &kp EXCL  &kp AT    &kp HASH &kp DLLR  &kp END    &kp PG_DN &trans   &kp DOWN &trans    &trans  &kp CAPS
        &mo 1 &kp LCMD &mt LALT SPACE   &kp SPACE &mt RCMD ENTER &trans
      >;
    };

    media_layer {
      bindings = <
        &bt BT_CLR &bt BT_NXT &bt BT_PRV &trans &trans &trans &trans &kp K_MUTE   &kp C_VOL_DN &kp C_VOL_UP &trans &trans
        &trans     &trans     &trans     &trans &trans &trans &trans &kp C_PREV   &kp C_PP     &kp C_PP     &trans &trans
        &trans     &trans     &trans     &trans &trans &trans &trans &kp C_BRI_UP &kp C_BRI_DN &trans       &trans &trans
        &trans &kp LCMD &mt LALT SPACE   &kp SPACE &mt RCMD ENTER &trans
      >;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };
};
